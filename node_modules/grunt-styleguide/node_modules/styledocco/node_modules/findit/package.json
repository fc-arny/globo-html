{
  "name": "findit",
  "version": "0.1.2",
  "description": "Walk a directory tree.",
  "main": "./index.js",
  "dependencies": {
    "seq": ">=0.1.7"
  },
  "devDependencies": {
    "hashish": ">=0.0.2 <0.1",
    "expresso": "0.7.x"
  },
  "scripts": {
    "test": "expresso"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/substack/node-findit.git"
  },
  "keywords": [
    "find",
    "walk",
    "directory",
    "recursive",
    "tree"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT/X11",
  "engine": [
    "node >=0.2.0"
  ],
  "readme": "findit\r\n======\r\n\r\nRecursively walk directory trees. Think `/usr/bin/find`.\r\n\r\nexample time!\r\n=============\r\n\r\ncallback style\r\n--------------\r\n\r\n````javascript\r\nrequire('findit').find(__dirname, function (file) {\r\n    console.log(file);\r\n})\r\n````\r\n\r\nemitter style\r\n-------------\r\n\r\n````javascript\r\nvar finder = require('findit').find(__dirname);\r\n\r\nfinder.on('directory', function (dir, stat) {\r\n    console.log(dir + '/');\r\n});\r\n\r\nfinder.on('file', function (file, stat) {\r\n    console.log(file);\r\n});\r\n\r\nfinder.on('link', function (link, stat) {\r\n    console.log(link);\r\n});\r\n````\r\n\r\nsynchronous\r\n-----------\r\n\r\n````javascript\r\nvar files = require('findit').sync(__dirname);\r\n    console.dir(files);\r\n````\r\n\r\nmethods\r\n=======\r\n\r\nfind(basedir, options, cb)\r\n-----------------\r\n\r\nDo an asynchronous recursive walk starting at `basedir`.\r\n\r\nOptionally supply an options object. Setting the property 'follow_symlinks'\r\nwill follow symlinks.\r\n\r\nOptionally supply a callback that will get the same arguments as the path event\r\ndocumented below in \"events\".\r\n\r\nIf `basedir` is actually a non-directory regular file, findit emits a single\r\n\"file\" event for it then emits \"end\".\r\n\r\nFindit uses `fs.lstat()` so symlinks are not traversed automatically. To have it\r\nfollow symlinks, supply the options argument with 'follow_symlinks' set to true.\r\nFindit won't traverse an inode that it has seen before so directories can have\r\nsymlink cycles and findit won't blow up.\r\n\r\nReturns an EventEmitter. See \"events\".\r\n\r\nsync(basedir, options, cb)\r\n-----------------\r\n\r\nReturn an array of files and directories from a synchronous recursive walk\r\nstarting at `basedir`.\r\n\r\nOptionally supply an options object. Setting the property 'follow_symlinks'\r\nwill follow symlinks.\r\n\r\nAn optional callback `cb` will get called with `cb(file, stat)` if specified.\r\n\r\nevents\r\n======\r\n\r\nfile: [ file, stat ]\r\n--------------------\r\n\r\nEmitted for just files which are not directories.\r\n\r\ndirectory : [ directory, stat ]\r\n-------------------------------\r\n\r\nEmitted for directories.\r\n\r\npath : [ file, stat ]\r\n---------------------\r\n\r\nEmitted for both files and directories.\r\n\r\nend\r\n---\r\n\r\nEmitted when the recursive walk is done.\r\n",
  "readmeFilename": "README.markdown",
  "_id": "findit@0.1.2",
  "dist": {
    "shasum": "397634411d19eb6e677e632dbb234ac88a87ccb3"
  },
  "_resolved": "git://github.com/marrs/node-findit.git#fe41bc3d354f4a6d7c6eb6a17832012753739bbf",
  "_from": "findit@git://github.com/marrs/node-findit.git"
}
